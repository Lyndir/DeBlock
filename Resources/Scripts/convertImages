#!/usr/bin/env bash
source bashlib


emit "Converting PVRs"
    srcs=(
        fire
        smoke
        hole
    )
    weightings=(
        linear
        linear
        linear
    )
    bpps=(
        2
        2
        2
    )

    for i in "${!srcs[@]}"; do
        src=../png/${srcs[i]}.png
        weighting=${weightings[i]}
        bpp=${bpps[i]}

        [[ -f $src ]] || {
            emit -r "Couldn't find '$src'"
            continue
        }

        dst=${src##*/}
        emit "$dst (${bpp}bpp, $weighting)" --
            texturetool -e PVRTC -f PVR \
                --channel-weighting-linear --bits-per-pixel-2 \
                -p "$dst" -o "${dst%.png}.pvr" "$src"
        emit -$?
    done


echo
emit "Converting iTunesArtwork"
    icons=(
        [29]="Icon-Small.png"
        [50]="Icon-Small-50.png"
        [58]="Icon-Small@2x.png"
        [57]="Icon.png"
        [72]="Icon-72.png"
        [114]="Icon@2x.png"
    )
    cd "${0%/*}/../Images"

    for size in "${!icons[@]}"; do
        file=${icons[size]}

        emit "$file ($size px)" --
            convert "iTunesArtwork.png" -resize "${size}x${size}" "$file"
        emit -$?
    done


echo
emit "Converting @2x artwork"
    for file in !(Icon*)@2x.png; do
        if [[ $file = Default* ]]; then
            read width height < <(identify -format '%w %h' "$file")
            if (( width > height )); then
                emit "Rotating $file" --
                    mogrify -rotate 90 "$file"
                emit -$?
            fi
        fi
        emit "${file/@2x}" --
            convert "$file" -resize 50% "${file/@2x}"
        emit -$?
    done
